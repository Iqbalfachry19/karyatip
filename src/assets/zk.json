{"noir_version":"1.0.0-beta.3+ceaa1986628197bd1170147f6a07f0f98d21030a","hash":11085420659324941637,"abi":{"parameters":[{"name":"birth_year","type":{"kind":"field"},"visibility":"private"},{"name":"current_year","type":{"kind":"field"},"visibility":"public"}],"return_type":null,"error_types":{"2920182694213909827":{"error_kind":"string","string":"attempt to subtract with overflow"}}},"bytecode":"H4sIAAAAAAAA/+VZW27bMBBcPVy/HaeR08SxUeWv6BcpybH8F6AfPUeNykfpAXqSHqjoTQq0bLkNS8kOEg4FG1kgWEZiNrPDEYe2Avoby98/hR7HOodUj0Dne52FW0hgLdEA17W25IHJBY8jJiTSWd34YV1TObVARR5JzMVdUVTrrJK5/CSyzbZciWK1vStlKVfl6nNW5nlVFuV6s92sxUYWeSV3q02207VC91q5riUiXI8i1nwGVA9blK64wwbcz61p4o19Ao7pQZko8DFQpB1gv7447ND+He659TuE3eHQfUe6733aeWpwXeR6vwJyaG7Oqu4ttet4AZ2e43V17jEhTKC6YTuempRaoNCOZ5Lo6nhdwgm1R6fpeF3y43h9n4BVcbTj9YEiHdBxO57icEB4xxvQcTteT/eNdjzkeg/Jj+Opuo85XgjmG/gxQAI22H8O19C6F/cc6Twm+t8pR/Sww/M1NSm1QMUnsiCuTjwC9jgGLmabx0PECaLUuQGuF4FPdD5jQljME6oLXE1KLVDo4yFSlBPCifIMuLhtihKxYbQtyqnO50wIC3BKdVGqSakFCi3KiHCinBJOlOeeFtfmzxUn8kFE8vcaqJGnfOYTbiGBuIWJ98In4AsPdROgGHz1nRgEg+q26iCA41jrDjLT+ZIJYbeYUd1B1KTUAoV2EJNEVweZEU70l9SOgwi3gB7lkPy9IexD3ZaDIHGbeK98Ar7yUPeajttBVN/XBsGgul6wJhor+lu/hF6uc3I0wIVt3CYXc51vmBB2yTnVnVNNemuBOkLnzNe61pxworyhFytKufsTVdUA17V2xgOTi4XOSyaEBbiguijVpFsL1BGKUvJxbkE4US7BiwsWXzbXa4Z+T4F8sBdAnSj++OE2j0nBgWsq3uv84ef3j9++fnnH15m3ns78knZg1AC+Isi4/tBPfdGlegyM8dC6x/3HDX8X7Pk9tPKhuYeO3uOGe1yTvzgx8XIffSvPjLrI1zlcP/FTv3GtZsY4sfo0+b4HYeB6vJ93qB6hdY/n2s9MgMcnbSxRw//iYM2Y3w8xn78ACc5C29wrAAA=","debug_symbols":"ldbLioMwFIDhd8nahcmJ8fIqw1C8xBIQFS8Dg/Tda0uF0rr5dzk5fNn8m2yq8dV6vYS+HWZV/GyqG+pyCUO/T5uKn1fzWPaPaV7KaVGF1i5Svm/2k8gtUm3ovCqcvv1GSlNgKBAKLAUJBY6ClIKMgvwUOHOATH+Gi7HQWBgsBAuLRYKFwyLF4jx5nr2EkS+RU2FiLDQWBgvBwmKRYOGwSLHAzQ1uLri54OaCmwtuLri54OaCmwtuLri54OYWN7e4ucXN7Wlzk+pDZPGnsFgkWDgsUiwyLHIqkhgLzcQ+VFPounC9vP8Z9+u/cgpl1fnX2K59/bZd/sdjc/hxGmrfrJN/vPTc7c/fAQ==","file_map":{"61":{"source":"fn main(birth_year: Field, current_year: pub Field) {\n    // Cast to signed integers (i32)\n    let birth_year_i32 = birth_year as i32;\n    let current_year_i32 = current_year as i32;\n\n    let age = current_year_i32 - birth_year_i32;\n\n    // Check if age >= 18\n    assert(age >= 18);\n}\n\n#[test]\nfn test_main() {\n    // Should pass (age = 26)\n    main(1998, 2025);\n\n    // Should fail if uncommented (age = 17)\n    // main(2007, 2024);\n}\n","path":"/Users/iqbalfachry/kode/react/KaryaTip/zk/src/main.nr"}},"names":["main"],"brillig_names":["directive_integer_quotient","directive_invert"]}